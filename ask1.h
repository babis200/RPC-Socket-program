/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _ASK1_H_RPCGEN
#define _ASK1_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct X_array {
	struct {
		u_int X_len;
		int *X_val;
	} X;
	int X_size;
};
typedef struct X_array X_array;

struct Y_array {
	struct {
		u_int Y_len;
		int *Y_val;
	} Y;
	int Y_size;
};
typedef struct Y_array Y_array;

struct XY_array {
	struct {
		u_int XY_len;
		int *XY_val;
	} XY;
	int XY_size;
};
typedef struct XY_array XY_array;

struct ans {
	float X_metre;
	int X_inter_product;
	float avg[2];
};
typedef struct ans ans;

struct r_times_X_Y {
	struct {
		u_int X_Y_len;
		int *X_Y_val;
	} X_Y;
	int X_Y_size;
	float r;
};
typedef struct r_times_X_Y r_times_X_Y;

struct rXY {
	struct {
		u_int prod_len;
		float *prod_val;
	} prod;
};
typedef struct rXY rXY;

#define ASK1_PROG1 0x12340000
#define ASK1_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define metre 1
extern  float * metre_1(X_array *, CLIENT *);
extern  float * metre_1_svc(X_array *, struct svc_req *);
#define inner_product 2
extern  int * inner_product_1(XY_array *, CLIENT *);
extern  int * inner_product_1_svc(XY_array *, struct svc_req *);
#define averageX 3
extern  float * averagex_1(X_array *, CLIENT *);
extern  float * averagex_1_svc(X_array *, struct svc_req *);
#define averageY 4
extern  float * averagey_1(Y_array *, CLIENT *);
extern  float * averagey_1_svc(Y_array *, struct svc_req *);
#define product 5
extern  rXY * product_1(r_times_X_Y *, CLIENT *);
extern  rXY * product_1_svc(r_times_X_Y *, struct svc_req *);
extern int ask1_prog1_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define metre 1
extern  float * metre_1();
extern  float * metre_1_svc();
#define inner_product 2
extern  int * inner_product_1();
extern  int * inner_product_1_svc();
#define averageX 3
extern  float * averagex_1();
extern  float * averagex_1_svc();
#define averageY 4
extern  float * averagey_1();
extern  float * averagey_1_svc();
#define product 5
extern  rXY * product_1();
extern  rXY * product_1_svc();
extern int ask1_prog1_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_X_array (XDR *, X_array*);
extern  bool_t xdr_Y_array (XDR *, Y_array*);
extern  bool_t xdr_XY_array (XDR *, XY_array*);
extern  bool_t xdr_ans (XDR *, ans*);
extern  bool_t xdr_r_times_X_Y (XDR *, r_times_X_Y*);
extern  bool_t xdr_rXY (XDR *, rXY*);

#else /* K&R C */
extern bool_t xdr_X_array ();
extern bool_t xdr_Y_array ();
extern bool_t xdr_XY_array ();
extern bool_t xdr_ans ();
extern bool_t xdr_r_times_X_Y ();
extern bool_t xdr_rXY ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_ASK1_H_RPCGEN */
